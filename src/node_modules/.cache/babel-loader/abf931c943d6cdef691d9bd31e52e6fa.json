{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\308_tenzies\\\\src\\\\app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(allNewDice());\n  }\n\n  function holdDice(id) {\n    console.log(id);\n  }\n\n  const diceElement = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 41\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"die--block\",\n      children: diceElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll--btn\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"FBcbDbTSXYNs4QNsRKPH911OvUI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Coding/308_tenzies/src/app.js"],"names":["React","Die","nanoid","App","dice","setDice","useState","allNewDice","newDice","i","push","value","Math","ceil","random","isHeld","id","rollDice","holdDice","console","log","diceElement","map","die"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAeC,UAAU,EAAzB,CAAxB;;AAEA,WAASA,UAAT,GAAqB;AACjB,UAAMC,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA4B;AACzBD,MAAAA,OAAO,CAACE,IAAR,CAAa;AACTC,QAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CADE;AAETC,QAAAA,MAAM,EAAE,KAFC;AAGTC,QAAAA,EAAE,EAACd,MAAM;AAHA,OAAb;AAKF;;AACD,WAAOM,OAAP;AACH;;AAED,WAASS,QAAT,GAAmB;AACfZ,IAAAA,OAAO,CAACE,UAAU,EAAX,CAAP;AACH;;AAED,WAASW,QAAT,CAAkBF,EAAlB,EAAqB;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACH;;AAED,QAAMK,WAAW,GAAGjB,IAAI,CAACkB,GAAL,CAASC,GAAG,iBAAI,QAAC,GAAD;AAAK,IAAA,KAAK,EAAEA,GAAG,CAACZ,KAAhB;AAAuB,IAAA,MAAM,EAAEY,GAAG,CAACR,MAAnC;AAA2C,IAAA,QAAQ,EAAE,MAAMG,QAAQ,CAACK,GAAG,CAACP,EAAL;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAhB,CAApB;AAEC,sBACA;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKK;AADL;AAAA;AAAA;AAAA;AAAA,YADH,eAIG;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEJ,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOE;;GAhCiBd,G;;KAAAA,G","sourcesContent":["import React from \"react\"\r\nimport Die from \"./components/Die\"\r\nimport {nanoid} from \"nanoid\"\r\n\r\nexport default function App(){\r\n    const [dice, setDice] = React.useState(allNewDice())\r\n\r\n    function allNewDice(){\r\n        const newDice = []\r\n        for (let i = 0; i < 10; i++){\r\n           newDice.push({\r\n               value: Math.ceil(Math.random() * 6), \r\n               isHeld: false,\r\n               id:nanoid()\r\n            }) \r\n        }\r\n        return newDice\r\n    }\r\n    \r\n    function rollDice(){\r\n        setDice(allNewDice())\r\n    }\r\n\r\n    function holdDice(id){\r\n        console.log(id)\r\n    }\r\n\r\n    const diceElement = dice.map(die => <Die value={die.value} isHeld={die.isHeld} holdDice={() => holdDice(die.id)} />)\r\n\r\n     return (\r\n     <main>\r\n        <div className=\"die--block\">\r\n            {diceElement}\r\n        </div>\r\n        <button className=\"roll--btn\" onClick={rollDice}>Roll</button>\r\n    </main>\r\n     )}"]},"metadata":{},"sourceType":"module"}