{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\308_tenzies\\\\src\\\\app.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"./components/Confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  React.useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld);\n    const firstDie = dice[0].value;\n    const allSame = dice.every(die => die.value === firstDie);\n\n    if (allHeld && allSame) {\n      setTenzies(true);\n      console.log(\"you WOOOON\");\n    }\n  }, [dice]);\n\n  function generatesNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generatesNewDie());\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(oldDice => oldDice.map(die => {\n      return die.isHeld ? die : generatesNewDie();\n    }));\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n\n  const diceElement = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 41\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"die--block\",\n      children: diceElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll--btn\",\n      onClick: rollDice,\n      children: tenzies === true ? \"New Game\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"mBhM4pmDk1UgsaV8K35tBPcmDjA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Coding/308_tenzies/src/app.js"],"names":["React","Die","nanoid","Confetti","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","useEffect","allHeld","every","die","isHeld","firstDie","value","allSame","console","log","generatesNewDie","Math","ceil","random","id","newDice","i","push","rollDice","oldDice","map","holdDice","diceElement"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport Die from \"./components/Die\"\r\nimport {nanoid} from \"nanoid\"\r\nimport Confetti from \"./components/Confetti\"\r\n\r\nexport default function App(){\r\n    const [dice, setDice] = React.useState(allNewDice())\r\n    const [tenzies, setTenzies] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n       const allHeld = dice.every(die => die.isHeld)\r\n       const firstDie = dice[0].value \r\n       const allSame = dice.every(die => die.value === firstDie)\r\n       if (allHeld && allSame){\r\n           setTenzies(true)\r\n           console.log(\"you WOOOON\")\r\n       }\r\n    },[dice])\r\n\r\n    function generatesNewDie(){\r\n        return {\r\n            value: Math.ceil(Math.random() * 6), \r\n            isHeld: false,\r\n            id:nanoid()\r\n         }\r\n    }\r\n\r\n    function allNewDice(){\r\n        const newDice = []\r\n        for (let i = 0; i < 10; i++){\r\n           newDice.push(generatesNewDie()) \r\n        }\r\n        return newDice\r\n    }\r\n    \r\n    function rollDice(){\r\n        setDice(oldDice => oldDice.map(die =>{\r\n            return die.isHeld ?\r\n            die :\r\n            generatesNewDie()\r\n        }))\r\n    }\r\n\r\n    function holdDice(id){ \r\n        setDice(oldDice => oldDice.map(die =>{\r\n            return die.id === id ? \r\n            {...die, isHeld: !die.isHeld} :\r\n            die\r\n        }))\r\n    }\r\n\r\n    const diceElement = dice.map(die => <Die value={die.value} isHeld={die.isHeld} holdDice={() => holdDice(die.id)} />)\r\n\r\n     return (\r\n     <main>\r\n         <Confetti />\r\n        <h1 className=\"title\">Tenzies</h1>\r\n        <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\r\n        <div className=\"die--block\">\r\n            {diceElement}\r\n        </div>\r\n        <button className=\"roll--btn\" \r\n                onClick={rollDice}>\r\n                {tenzies === true ? \"New Game\" : \"Roll\"}\r\n        </button>\r\n    </main>\r\n     )}"]},"metadata":{},"sourceType":"module"}